version: '3.9'

services:
  catalog.api:
    container_name: catalog.api
    image: catalog.api
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    ports:
      - "6060:8000"
      - "6000:8001"
    depends_on:
      - catalogdb
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Database=Server=catalogdb;Port=5432;Database=CatalogDb;User Id=postgres;Password=postgres
    networks:
      - microservices-network

  catalogdb:
    container_name: catalogdb
    image: postgres:15
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=CatalogDb
    ports:
      - "5433:5432" # host:container
    volumes:
      - catalog_data:/var/lib/postgresql/data
    networks:
      - microservices-network

  basket.api:
    container_name: basket.api
    image: basket.api
    build:
      context: .
      dockerfile: Services/Basket/Basket.API/Dockerfile
    ports:
      - "7070:8000"
    depends_on:
      - basketdb
      - catalog.api
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Database=Server=basketdb;Port=5432;Database=BasketDb;User Id=postgres;Password=postgres
      - CatalogApi__Url=http://catalog.api:8000
    networks:
      - microservices-network

  basketdb:
    container_name: basketdb
    image: postgres:15
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=BasketDb
    ports:
      - "5434:5432" 
    volumes:
      - basket_data:/var/lib/postgresql/data
    networks:
      - microservices-network

volumes:
  catalog_data:
  basket_data:

networks:
  microservices-network:
    driver: bridge
